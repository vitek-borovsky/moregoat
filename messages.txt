lowercase: user -> server
uppercase: server -> client


create_game (player_count: [ 2, 3, 4, 5 ], board_size: [ 5, 7, ... 19 ])
# Response is JOIN_GAME

join_game (game_id: str)
# Response is either JOIN_GAME or error #TODO
JOIN_GAME (game_id: str, player_id: int)
# This doubles as response to create game so it needs to return game_id it also works as confirmation that we didn't join wrong game

START_GAME()
# All players joined => Game started

stone_placed(game_id: str, col: int, row: int, game_id: str, player_id: int)
# Respones is either STONE_PLACED and optionally STONE_CAPTURED or err #TODO

STONE_PLACED(game_id: str, col: int, row: int, player_id: int)

STONE_CAPTURED(set[(col: int, row: int)])

player_pass()
PLAYER_PASS(player_id: int)

GAME_END(dict[player_id: int -> points: int)
